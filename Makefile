##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [2.26.0] date: [Thu Dec 21 15:14:00 CST 2017]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = STM32F103_BLDC

######################################
# C defines
######################################
C_DEFS = -DUSE_HAL_DRIVER \
		 -DSTM32F103xB

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og

#######################################
# paths
#######################################
BUILD_DIR = build

# C includes
C_INCLUDES = -IMain \
			 -IBLDC \
			 -IDrivers/BSP \
             -IDrivers/STM32Cube_FW_F1_V1.4.0/STM32F1xx_HAL_Driver/Inc \
             -IDrivers/STM32Cube_FW_F1_V1.4.0/STM32F1xx_HAL_Driver/Inc/Legacy \
             -IDrivers/STM32Cube_FW_F1_V1.4.0/CMSIS/Device/STM32F1xx/Include \
             -IDrivers/STM32Cube_FW_F1_V1.4.0/CMSIS/Include

HAL_DIR = Drivers/STM32Cube_FW_F1_V1.4.0/STM32F1xx_HAL_Driver
MAIN_DIR = Main

######################################
# source
######################################
# C sources
MAIN_SRC = $(notdir $(wildcard $(MAIN_DIR)/*.c))

C_SOURCES :=  \
$(HAL_DIR)/Src/stm32f1xx_hal_adc.c \
$(HAL_DIR)/Src/stm32f1xx_hal_adc_ex.c \
$(HAL_DIR)/Src/stm32f1xx_hal_flash.c \
$(HAL_DIR)/Src/stm32f1xx_hal_cortex.c \
$(HAL_DIR)/Src/stm32f1xx_hal.c \
$(HAL_DIR)/Src/stm32f1xx_hal_gpio.c \
$(HAL_DIR)/Src/stm32f1xx_hal_tim_ex.c \
$(HAL_DIR)/Src/stm32f1xx_hal_flash_ex.c \
$(HAL_DIR)/Src/stm32f1xx_hal_pwr.c \
$(HAL_DIR)/Src/stm32f1xx_hal_rcc.c \
$(HAL_DIR)/Src/stm32f1xx_hal_rcc_ex.c \
$(HAL_DIR)/Src/stm32f1xx_hal_tim.c \
$(HAL_DIR)/Src/stm32f1xx_hal_dma.c \
$(HAL_DIR)/Src/stm32f1xx_hal_gpio_ex.c \
$(HAL_DIR)/Src/stm32f1xx_hal_uart.c \
$(HAL_DIR)/Src/stm32f1xx_hal_usart.c \
Drivers/BSP/stm32f1_easyco.c \
Drivers/BSP/bsp_adc.c \
Drivers/BSP/bsp_tim.c \
Main/main.c \
Main/system.c \
Main/syscalls.c \
Main/system_stm32f1xx.c \
Main/stm32f1xx_it.c \
BLDC/adc.c \
BLDC/pwm.c \
BLDC/comm.c \
BLDC/bldc.c

# ASM sources
ASM_SOURCES =  \
startup_stm32f103xb.s


######################################
# firmware library
######################################
PERIFLIB_SOURCES = 


#######################################
# binaries
#######################################
BINPATH = 
PREFIX = arm-none-eabi-
CC = $(BINPATH)$(PREFIX)gcc
AS = $(BINPATH)$(PREFIX)gcc -x assembler-with-cpp
CP = $(BINPATH)$(PREFIX)objcopy
AR = $(BINPATH)$(PREFIX)ar
SZ = $(BINPATH)$(PREFIX)size
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m3

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 




# AS includes
AS_INCLUDES = 




# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F103RBTx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys
LIBDIR =
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR .dep $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(shell mkdir .dep 2>/dev/null) $(wildcard .dep/*)

# *** EOF ***